---
import react from "@astrojs/react";
import useState from "@astrojs/react";
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";

const WEATHER_API_KEY = import.meta.env.WEATHER_API_KEY;
const LOCATION_API_KEY = import.meta.env.LOCATION_API_KEY;

const getArduinoData = async () => {
  const response = await fetch(
    "https://api.thingspeak.com/channels/1688655/fields/1.json?api_key=Z4QAPRBOZFTVUM3K&results=1"
  );

  let arduinoData = await response.json();
  let arduinoFeed = arduinoData.feeds[0].field1.slice(0, 4);
  return arduinoFeed;
};

const userLocation = await fetch(
  `https://api.geoapify.com/v1/ipinfo?&apiKey=${LOCATION_API_KEY}`
);
const locationData = await userLocation.json();
const lat = locationData.location.latitude;
const lon = locationData.location.longitude;

const OpenWeatherAPI = await fetch(
  `http://api.openweathermap.org/data/2.5/air_pollution?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`
);
const weatherData = await OpenWeatherAPI.json();
const aqi = weatherData.list[0].main.aqi;
---

<Layout title="Welcome to Astro.">
  <main>
    {getArduinoData()}
    {aqi}
    {JSON.stringify("latitude is:" + lat + "\n" + "longitude is:" + lon)}
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1.5rem;
    max-width: 60ch;
  }
  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .instructions code {
    font-size: 0.875em;
    font-weight: bold;
    background: rgba(var(--accent), 12%);
    color: rgb(var(--accent));
    border-radius: 4px;
    padding: 0.3em 0.45em;
  }
  .instructions strong {
    color: rgb(var(--accent));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
</style>
